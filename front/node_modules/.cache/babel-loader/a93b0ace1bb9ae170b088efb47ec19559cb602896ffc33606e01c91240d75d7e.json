{"ast":null,"code":"import React from'react';import AdminForm from'./AdminForm';import AdminDashboard from'../Components/AdminSection/AdminDashboard';import{useAuth}from'../Context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const AdminPage=()=>{const{isLoggedIn,user,loading}=useAuth();if(loading)return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});// Show dashboard only if logged in and user is admin\nif(isLoggedIn&&user&&user.role==='admin'){return/*#__PURE__*/_jsx(AdminDashboard,{});}// Otherwise, show login form\nreturn/*#__PURE__*/_jsx(AdminForm,{});};export default AdminPage;","map":{"version":3,"names":["React","AdminForm","AdminDashboard","useAuth","jsx","_jsx","AdminPage","isLoggedIn","user","loading","children","role"],"sources":["C:/Users/User/Desktop/HULAME FINAL FR/front/src/Pages/AdminPage.jsx"],"sourcesContent":["import React from 'react'\r\nimport AdminForm from './AdminForm';\r\nimport AdminDashboard from '../Components/AdminSection/AdminDashboard';\r\nimport { useAuth } from '../Context/AuthContext';\r\n\r\nconst AdminPage = () => {\r\n  const { isLoggedIn, user, loading } = useAuth();\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  // Show dashboard only if logged in and user is admin\r\n  if (isLoggedIn && user && user.role === 'admin') {\r\n    return <AdminDashboard />;\r\n  }\r\n\r\n  // Otherwise, show login form\r\n  return <AdminForm />;\r\n}\r\n\r\nexport default AdminPage"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,cAAc,KAAM,2CAA2C,CACtE,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAAEC,UAAU,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGN,OAAO,CAAC,CAAC,CAE/C,GAAIM,OAAO,CAAE,mBAAOJ,IAAA,QAAAK,QAAA,CAAK,YAAU,CAAK,CAAC,CAEzC;AACA,GAAIH,UAAU,EAAIC,IAAI,EAAIA,IAAI,CAACG,IAAI,GAAK,OAAO,CAAE,CAC/C,mBAAON,IAAA,CAACH,cAAc,GAAE,CAAC,CAC3B,CAEA;AACA,mBAAOG,IAAA,CAACJ,SAAS,GAAE,CAAC,CACtB,CAAC,CAED,cAAe,CAAAK,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}