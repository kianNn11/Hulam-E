{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Downloads\\\\Clients\\\\Hulam-E\\\\front\\\\src\\\\Components\\\\Common\\\\AlertMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { XMarkIcon, ExclamationTriangleIcon, CheckCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\nimport './AlertMessage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertMessage = ({\n  type,\n  message,\n  onClose,\n  autoClose = true,\n  duration = 5000,\n  restrictionDetails,\n  className = ''\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(true);\n  const handleClose = useCallback(() => {\n    setIsVisible(false);\n    setTimeout(() => {\n      if (onClose) onClose();\n    }, 300); // Wait for fade-out animation\n  }, [onClose]);\n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        handleClose();\n      }, duration);\n      return () => clearTimeout(timer);\n    }\n  }, [autoClose, duration, handleClose]);\n  const getIcon = () => {\n    switch (type) {\n      case 'success':\n        return /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"alert-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      case 'warning':\n        return /*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n          className: \"alert-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(ExclamationTriangleIcon, {\n          className: \"alert-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(InformationCircleIcon, {\n          className: \"alert-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const formatMessage = msg => {\n    if (typeof msg !== 'string') return msg;\n\n    // Split by double newlines to create paragraphs\n    const paragraphs = msg.split('\\n\\n');\n    return paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert-paragraph\",\n      children: paragraph.split('\\n').map((line, lineIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [line, lineIndex < paragraph.split('\\n').length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 62\n        }, this)]\n      }, lineIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  };\n  if (!isVisible) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `alert-message alert-${type} ${className} ${isVisible ? 'alert-visible' : 'alert-hidden'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-icon-container\",\n        children: getIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-text-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-message-text\",\n          children: formatMessage(message)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), restrictionDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-restriction-details\",\n          children: [restrictionDetails.blockedAction && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restriction-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Blocked Action:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), \" \", restrictionDetails.blockedAction]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), restrictionDetails.contactInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restriction-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Support:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), \" \", restrictionDetails.contactInfo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClose,\n        className: \"alert-close-button\",\n        children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n          className: \"alert-close-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertMessage, \"E+XiGRnrLo8+T+uwlJl3PKXkwYA=\");\n_c = AlertMessage;\nexport default AlertMessage;\nvar _c;\n$RefreshReg$(_c, \"AlertMessage\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","XMarkIcon","ExclamationTriangleIcon","CheckCircleIcon","InformationCircleIcon","jsxDEV","_jsxDEV","AlertMessage","type","message","onClose","autoClose","duration","restrictionDetails","className","_s","isVisible","setIsVisible","handleClose","setTimeout","timer","clearTimeout","getIcon","fileName","_jsxFileName","lineNumber","columnNumber","formatMessage","msg","paragraphs","split","map","paragraph","index","children","line","lineIndex","Fragment","length","blockedAction","contactInfo","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Downloads/Clients/Hulam-E/front/src/Components/Common/AlertMessage.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { XMarkIcon, ExclamationTriangleIcon, CheckCircleIcon, InformationCircleIcon } from '@heroicons/react/24/outline';\r\nimport './AlertMessage.css';\r\n\r\nconst AlertMessage = ({ type, message, onClose, autoClose = true, duration = 5000, restrictionDetails, className = '' }) => {\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setIsVisible(false);\r\n    setTimeout(() => {\r\n      if (onClose) onClose();\r\n    }, 300); // Wait for fade-out animation\r\n  }, [onClose]);\r\n\r\n  useEffect(() => {\r\n    if (autoClose) {\r\n      const timer = setTimeout(() => {\r\n        handleClose();\r\n      }, duration);\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [autoClose, duration, handleClose]);\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return <CheckCircleIcon className=\"alert-icon\" />;\r\n      case 'warning':\r\n        return <ExclamationTriangleIcon className=\"alert-icon\" />;\r\n      case 'error':\r\n        return <ExclamationTriangleIcon className=\"alert-icon\" />;\r\n      default:\r\n        return <InformationCircleIcon className=\"alert-icon\" />;\r\n    }\r\n  };\r\n\r\n  const formatMessage = (msg) => {\r\n    if (typeof msg !== 'string') return msg;\r\n    \r\n    // Split by double newlines to create paragraphs\r\n    const paragraphs = msg.split('\\n\\n');\r\n    \r\n    return paragraphs.map((paragraph, index) => (\r\n      <p key={index} className=\"alert-paragraph\">\r\n        {paragraph.split('\\n').map((line, lineIndex) => (\r\n          <React.Fragment key={lineIndex}>\r\n            {line}\r\n            {lineIndex < paragraph.split('\\n').length - 1 && <br />}\r\n          </React.Fragment>\r\n        ))}\r\n      </p>\r\n    ));\r\n  };\r\n\r\n  if (!isVisible) return null;\r\n\r\n  return (\r\n    <div className={`alert-message alert-${type} ${className} ${isVisible ? 'alert-visible' : 'alert-hidden'}`}>\r\n      <div className=\"alert-content\">\r\n        <div className=\"alert-icon-container\">\r\n          {getIcon()}\r\n        </div>\r\n        <div className=\"alert-text-container\">\r\n          <div className=\"alert-message-text\">\r\n            {formatMessage(message)}\r\n          </div>\r\n          \r\n          {/* Show restriction details if available */}\r\n          {restrictionDetails && (\r\n            <div className=\"alert-restriction-details\">\r\n              {restrictionDetails.blockedAction && (\r\n                <div className=\"restriction-item\">\r\n                  <strong>Blocked Action:</strong> {restrictionDetails.blockedAction}\r\n                </div>\r\n              )}\r\n              {restrictionDetails.contactInfo && (\r\n                <div className=\"restriction-item\">\r\n                  <strong>Support:</strong> {restrictionDetails.contactInfo}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <button onClick={handleClose} className=\"alert-close-button\">\r\n          <XMarkIcon className=\"alert-close-icon\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertMessage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}