{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Downloads\\\\Clients\\\\hulame\\\\front\\\\src\\\\Context\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Load theme preference from localStorage on initial load\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (savedTheme === 'dark' || !savedTheme && prefersDark) {\n      setIsDarkMode(true);\n      document.documentElement.setAttribute('data-theme', 'dark');\n    } else {\n      setIsDarkMode(false);\n      document.documentElement.setAttribute('data-theme', 'light');\n    }\n  }, []);\n  const toggleTheme = () => {\n    const newTheme = !isDarkMode;\n    setIsDarkMode(newTheme);\n\n    // Save to localStorage\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n\n    // Update document attribute for CSS\n    document.documentElement.setAttribute('data-theme', newTheme ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","setAttribute","toggleTheme","newTheme","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Acer/Downloads/Clients/hulame/front/src/Context/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Load theme preference from localStorage on initial load\r\n  useEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    \r\n    if (savedTheme === 'dark' || (!savedTheme && prefersDark)) {\r\n      setIsDarkMode(true);\r\n      document.documentElement.setAttribute('data-theme', 'dark');\r\n    } else {\r\n      setIsDarkMode(false);\r\n      document.documentElement.setAttribute('data-theme', 'light');\r\n    }\r\n  }, []);\r\n\r\n  const toggleTheme = () => {\r\n    const newTheme = !isDarkMode;\r\n    setIsDarkMode(newTheme);\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\r\n    \r\n    // Update document attribute for CSS\r\n    document.documentElement.setAttribute('data-theme', newTheme ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E,IAAIN,UAAU,KAAK,MAAM,IAAK,CAACA,UAAU,IAAIG,WAAY,EAAE;MACzDJ,aAAa,CAAC,IAAI,CAAC;MACnBQ,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;IAC7D,CAAC,MAAM;MACLV,aAAa,CAAC,KAAK,CAAC;MACpBQ,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC;IAC9D;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,CAACb,UAAU;IAC5BC,aAAa,CAACY,QAAQ,CAAC;;IAEvB;IACAV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAED,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;;IAE1D;IACAJ,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEE,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAClF,CAAC;EAED,oBACElB,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,UAAU;MAAEY;IAAY,CAAE;IAAAd,QAAA,EACvDA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACrB,EAAA,CAjCWF,aAAa;AAAAwB,EAAA,GAAbxB,aAAa;AAmC1B,OAAO,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGjC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAAC4B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}